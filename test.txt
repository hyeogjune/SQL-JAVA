VIEW
예1) 사원번호, 사원이름, 근무지를 
      출력하시오.
SELECT EMPNO, ENAME, LOC
FROM EMP JOIN DEPT 
ON (EMP.DEPTNO = DEPT.DEPTNO);

CREATE VIEW V_EMP_LOC AS
SELECT EMPNO, ENAME, LOC
FROM EMP JOIN DEPT 
ON (EMP.DEPTNO = DEPT.DEPTNO);

SELECT * FROM V_EMP_LOC;

SELECT * FROM V_EMP_LOC
WHERE LOC = 'CHICAGO'; 

INSERT INTO V_EMP_LOC (EMPNO, ENAME)
VALUES (9999,'T');

UPDATE V_EMP_LOC
SET ENAME = 'YEODB'
WHERE EMPNO = 7777;

DELETE FROM V_EMP_LOC
WHERE EMPNO = 7777;

CREATE OR REPLACE VIEW V_EMP_LOC AS
SELECT EMPNO, ENAME, LOC
FROM EMP LEFT OUTER JOIN DEPT 
ON (EMP.DEPTNO = DEPT.DEPTNO);

문1) EMP 테이블로 부터 10, 20번 부서 사원들의
      뷰를 만드시오.

CREATE OR REPLACE VIEW V_EMP AS
SELECT * FROM EMP
WHERE DEPTNO IN (10,20);

문2) 사원번호, 사원이름, 부서이름, 상급자이름으로
      구성된 뷰를 만드시오.
CREATE OR REPLACE VIEW V_EMP_MGR AS
SELECT E1.EMPNO EMP_NO, E1.ENAME EMP_NAME, 
          D.DNAME DEPT_NAME, E2.ENAME MGR_NAME
FROM EMP E1, DEPT D, EMP E2
WHERE E1.DEPTNO = D.DEPTNO
AND E1.MGR = E2.EMPNO;

문3) 학과별 평균 몸무게와 평균 키를 가지는
      뷰를 만드시오.
CREATE OR REPLACE VIEW 
STU_AVG_BODY (DEPT, AVG_WEIGHT, AVG_HEIGHT)
AS
SELECT STU_DEPT, 
         ROUND(AVG(STU_WEIGHT)), 
         ROUND(AVG(STU_HEIGHT))
FROM STUDENT
WHERE STU_DEPT IS NOT NULL
GROUP BY STU_DEPT;

DROP VIEW STU_AVG_BODY;

문4) 학생이름, 키, 몸무게, BMI 지수를 가지는 
      뷰를 만드시오.
      몸무게(kg) ÷ (신장(m) × 신장(m))
CREATE VIEW V_BMI (STU_NAME, STU_HEIGHT,
                            STU_WEIGHT, BMI) AS 
SELECT STU_NAME, STU_HEIGHT, STU_WEIGHT,
ROUND((10000*STU_WEIGHT/POWER(STU_HEIGHT,2)),1)
FROM STUDENT; 

문5) 사원 번호, 이름, 부서명, 급여, 커미션, 
      전체수입(SAL+COMM)을 가지는 뷰를 만드시오.

CREATE VIEW V_INCOME 
(EMPNO, ENAME, DNAME, SAL, COMM, INCOME) AS
SELECT EMPNO, ENAME, DNAME, SAL, COMM,
          SAL+NVL(COMM,0)
FROM EMP NATURAL JOIN DEPT;

[TOP-N]
ROWNUM

SELECT ROWNUM, STU_HEIGHT
FROM (SELECT STU_HEIGHT
          FROM STUDENT
          WHERE STU_HEIGHT IS NOT NULL
          ORDER BY 1 DESC);
WHERE ROWNUM <= 3

SELECT ROWNUM, STU_HEIGHT
FROM (SELECT STU_HEIGHT
          FROM STUDENT
          WHERE STU_HEIGHT IS NOT NULL
          ORDER BY 1 DESC);
WHERE ROWNUM = 1

문6) 수입이 가장 많은 상위 3명의 
      직원 번호, 수입(SAL+COMM)을 
     출력하시오.
SELECT *
FROM (SELECT EMPNO, NVL(SAL,0)+NVL(COMM,0) INCOME
          FROM EMP
          ORDER BY 2 DESC)
WHERE ROWNUM <4;

문7) 부서별 평균 급여가 작은 부서 2개의
     부서명, 평균급여를 출력하시오.
SELECT *
FROM (SELECT DNAME, ROUND(AVG(SAL))
	FROM EMP NATURAL JOIN DEPT
	GROUP BY DNAME, DEPTNO
	HAVING AVG(SAL) IS NOT NULL
	ORDER BY 1)
WHERE ROWNUM < 3

문8) BMI크기가 상위 5명의 
     이름, 학번, BMI지수를 출력하시오.
SELECT * 
FROM (SELECT STU_NAME, STU_NO, BMI
          FROM STUDENT NATURAL JOIN V_BMI
         ORDER BY 3 DESC)
WHERE ROWNUM < 6;

[index]
CREATE INDEX i_ename
ON EMP(ENAME);

DROP INDEX i_ename;

[sequence]
CREATE SEQUENCE seq_num
INCREMENT BY 1
START WITH 1
MAXVALUE 100;

CREATE TABLE SEQ_TABLE 
(SEQ_NO, EMPNO, ENAME) AS
SELECT SEQ_NUM.NEXTVAL,
          EMPNO, ENAME
FROM EMP;

문9) 초기값1, 증감값 2,
      최대값 20, CYCLE이 가능한
      시퀀스를 만드시오.
CREATE SEQUENCE SEQ_NUM2
START WITH 1
INCREMENT BY 2
MAXVALUE 20
CYCLE
NOCACHE;

INSERT INTO FORE_STUDENT
VALUES (SEQ_NUM2.NEXTVAL,'YEO','DONGBIN') 















